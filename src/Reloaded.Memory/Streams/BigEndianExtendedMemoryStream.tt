<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>

<# 
    string[] types = { "byte", "sbyte", "short", "ushort", "int", "uint", "long", "ulong", "float", "double" };
#>

using System.IO;
using System.Runtime.CompilerServices;
using System.Diagnostics.CodeAnalysis;

namespace Reloaded.Memory.Streams
{
    public partial class ExtendedMemoryStream
    {
<#
			foreach (var type in types)
			{ 
#>        
		/// <summary>
        /// Appends a Big Endian <#= type #> onto the <see cref="MemoryStream"/> and advances the position.
        /// </summary>
		[ExcludeFromCodeCoverage]
        public void WriteBigEndianPrimitive(<#= type #> structure)
        {
            structure = Endian.Reverse(structure);
            Write(ref structure);
        }

		/// <summary>
        /// Appends an array of Big Endian <#= type #>(s) onto the <see cref="MemoryStream"/> and advances the position.
        /// </summary>
		[ExcludeFromCodeCoverage]
        public void WriteBigEndianPrimitive(<#= type #>[] structures)
        {
			foreach (var structure in structures) 
				WriteBigEndianPrimitive(structure);
        }
<#
            } 
#>
    }
}
